[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nWeb Scraping Publications from Google Scholar\n\n\n\n\n\n\nR\n\n\n\nExtract title, citation count and year of publications for an author from Google Scholar.\n\n\n\n\n\nFeb 6, 2022\n\n\nPurushottam Mohanty\n\n\n\n\n\n\n\n\n\n\n\n\nTranslate using Google Translate\n\n\n\n\n\n\nPython\n\n\n\nTranslate using Google Cloud Platform (GCP) Translate API\n\n\n\n\n\nJan 18, 2022\n\n\nPurushottam Mohanty\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Notes: * corresponding author; GS graduate student advisee; VS visiting scholar;  ESI Highly Cited Paper (top 1%);  ESI Hot Paper (top 0.1%)\nTotal citations as of January 2025:"
  },
  {
    "objectID": "publications.html#selected-work",
    "href": "publications.html#selected-work",
    "title": "Publications",
    "section": "Selected Work",
    "text": "Selected Work\nEinstein, A., Podolsky, B., & Rosen, N. (1935). Can quantum-mechanical description of physical reality be considered complete?. Physical review, 47(10), 777. [pdf] [code and data]   \n\n\n\n\n\n\nEinstein, A. (1965). Concerning an heuristic point of view toward the emission and transformation of light. American Journal of Physics, 33(5), 367. [pdf]"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Order By\n       Default\n         \n        \n         \n          Title\n        \n         \n          Team\n        \n         \n          Funder\n        \n         \n          Description\n        \n         \n          Start\n        \n         \n          End\n        \n         \n          Funding\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n \n\n\nTitle\n\n\nTeam\n\n\nFunder\n\n\nDescription\n\n\nFunding\n\n\nStart\n\n\nEnd\n\n\n\n\n\n\n\n\n\nExploring \n\n\nAcademic Website\n\n\nFunder\n\n\nThe goal of this project is to investigate .\n\n\n$0\n\n\n2024\n\n\n2025\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/news-title/index.html",
    "href": "posts/news-title/index.html",
    "title": "News item",
    "section": "",
    "text": "About the news"
  },
  {
    "objectID": "posts/news-title/index.html#summary",
    "href": "posts/news-title/index.html#summary",
    "title": "News item",
    "section": "",
    "text": "About the news"
  },
  {
    "objectID": "posts/paper-title/index.html#abstract",
    "href": "posts/paper-title/index.html#abstract",
    "title": "Can quantum-mechanical description of physical reality be considered complete?",
    "section": "Abstract",
    "text": "Abstract\nIn a complete theory there is an element corresponding to each element of reality. A sufficient condition for the reality of a physical quantity is the possibility of predicting it with certainty, without disturbing the system. In quantum mechanics in the case of two physical quantities described by non-commuting operators, the knowledge of one precludes the knowledge of the other. Then either (1) the description of reality given by the wave function in quantum mechanics is not complete or (2) these two quantities cannot have simultaneous reality. Consideration of the problem of making predictions concerning a system on the basis of measurements made on another system that had previously interacted with it leads to the result that if (1) is false then (2) is also false. One is thus led to conclude that the description of reality as given by a wave function is not complete."
  },
  {
    "objectID": "posts/paper-title/index.html#links",
    "href": "posts/paper-title/index.html#links",
    "title": "Can quantum-mechanical description of physical reality be considered complete?",
    "section": "Links",
    "text": "Links\nPublished paper"
  },
  {
    "objectID": "teaching.html",
    "href": "teaching.html",
    "title": "Teaching",
    "section": "",
    "text": "Fall 2024,   Fall 2023\nClass 1 introduction."
  },
  {
    "objectID": "teaching.html#class-1",
    "href": "teaching.html#class-1",
    "title": "Teaching",
    "section": "",
    "text": "Fall 2024,   Fall 2023\nClass 1 introduction."
  },
  {
    "objectID": "teaching.html#class-2",
    "href": "teaching.html#class-2",
    "title": "Teaching",
    "section": "Class 2",
    "text": "Class 2\n\n\n\n\n\nSpring 2025,   Fall 2023\nClass 2 introduction."
  },
  {
    "objectID": "teaching.html#class-3",
    "href": "teaching.html#class-3",
    "title": "Teaching",
    "section": "Class 3",
    "text": "Class 3\n\n\n\n\n\nSpring 2025,   Spring 2024\nClass 3 introduction."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Quarto Academic\nSchool\nCollege\nUniversity\nAddress:\nPhone:\nE-mail:"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Purushottam Mohanty",
    "section": "",
    "text": "E-mail\n  \n  \n    \n     LinkedIn\n  \n\n  \n  \nI’m Purushottam Mohanty, a 2nd year PhD student in Economics at Duke University. I’m interested in topics in development economics and political economy.\nBefore starting my PhD, I was a predoc for Prof. Oeindrila Dube at the Becker Friedman Institute, University of Chicago. Prior to that, I worked as a Senior Data Associate at Good Business Lab, in India.\n\n\n\nPhD in Economics, Duke University (2024-)\nMasters in Economics (APE), Paris School of Economics (2018-20)\nB.A. (Honors) Economics, University of Delhi (2015-18)"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Purushottam Mohanty",
    "section": "",
    "text": "Researcher, Univerisity"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Purushottam Mohanty",
    "section": "",
    "text": "PhD in Economics, Duke University (2024-)\nMasters in Economics (APE), Paris School of Economics (2018-20)\nB.A. (Honors) Economics, University of Delhi (2015-18)"
  },
  {
    "objectID": "index.html#recent-posts",
    "href": "index.html#recent-posts",
    "title": "Purushottam Mohanty",
    "section": "Recent Posts",
    "text": "Recent Posts\nCheck out the latest and  More »\n\n\n\n\n\n\n\n\n\n\nQuarto Academic Website Examples and Tips\n\n\n\nOct 15, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeb Scraping Publications from Google Scholar\n\n\n\nFeb 6, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslate using Google Translate\n\n\n\nJan 18, 2022\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\nAll Posts »"
  },
  {
    "objectID": "people.html",
    "href": "people.html",
    "title": "People",
    "section": "",
    "text": "PI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhD Student\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people.html#team",
    "href": "people.html#team",
    "title": "People",
    "section": "",
    "text": "PI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhD Student\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people.html#alumni",
    "href": "people.html#alumni",
    "title": "People",
    "section": "Alumni",
    "text": "Alumni\n\n\n   \n     \n     \n       Order By\n       Default\n         \n        \n         \n          Name\n        \n         \n          Role\n        \n         \n          Started\n        \n         \n          Ended\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n \n\n\nName\n\n\nRole\n\n\nStarted\n\n\nEnded\n\n\n\n\n\n\n\n\n\nStudent Name\n\n\nPhD Student\n\n\n2024\n\n\n2025\n\n\n\n\n\n\n\nPI Name\n\n\nPI\n\n\n \n\n\n \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2022-02-06-google-scholar-scraping.html",
    "href": "posts/2022-02-06-google-scholar-scraping.html",
    "title": "Web Scraping Publications from Google Scholar",
    "section": "",
    "text": "This post shows how to extract title (including co-authors and journal), citation count and year of publication for all available publications from an author profile in Google Scholar."
  },
  {
    "objectID": "posts/2022-02-06-google-scholar-scraping.html#extract-list-of-faculty-names",
    "href": "posts/2022-02-06-google-scholar-scraping.html#extract-list-of-faculty-names",
    "title": "Web Scraping Publications from Google Scholar",
    "section": "Extract List of Faculty Names",
    "text": "Extract List of Faculty Names\nFor this example, I use names of Stanford Computer Science faculty members .\n\n# Stanford CS Faculty\nhtmlpage = read_html(\"https://cs.stanford.edu/directory/faculty\")\n\n# regular faculty\nfaculty = htmlpage %&gt;%\n  html_elements(xpath = '//*[@id=\"node-113\"]/div/div[1]/div/div/table[1]') %&gt;%\n  html_table() %&gt;%\n  .[[1]] %&gt;%\n  as.data.frame()\n\n# dataframe headers\nnames(faculty) = c(\"name\", \"phone\", \"office\", \"email_prefix\")"
  },
  {
    "objectID": "posts/2022-02-06-google-scholar-scraping.html#function-to-get-faculty-publications-from-google-scholar",
    "href": "posts/2022-02-06-google-scholar-scraping.html#function-to-get-faculty-publications-from-google-scholar",
    "title": "Web Scraping Publications from Google Scholar",
    "section": "Function to Get Faculty Publications from Google Scholar",
    "text": "Function to Get Faculty Publications from Google Scholar\nThe below function first searches the corresponding researcher’s name in Google Scholar and obtains the Google Scholar Author ID for the same. Thereafter, it makes another request to obtain the list of publications from the profile page. Google Scholar uses pagination and only shows up the most cited 100 publications first. Another request is required to be made for the next 100 publications. Since, repeated requests can cause Google to temporarily block requests from an IP address or introduce a CAPTCHA, the function below makes page requests with a 3 second delay. Using this method, we extract the full title of the publication including the names of co-authors and the journal it was published at. Along with the title we also extract the year of publication and the total citation count of the publication.\nFinally, it appends all the data from all the pages and outputs a dataframe. At the time of writing this post, the following method worked without any issue however your mileage may vary depending on how many requests you’re making and at what time you’re making them.\n\n# function - get faculty publications with citations and year of publications\n# using google scholar search and google scholar author profiles\n# function takes one attribute - name of faculty\nget_faculty_pubs = function(x){ \n  \n  # tryCatch skips loops in case of an error (example, if the faculty has no Google Scholar profile)\n  return(tryCatch({\n    \n    # get faculty name\n    faculty_name = x\n    \n    # split name and tidy search string\n    search_string = paste(str_split(faculty_name, \" \")[[1]][1], \n                          str_split(faculty_name, \" \")[[1]][2], \n                          sep = \"+\")\n    \n    # gc author search url\n    gc_author_search_url = paste0(\n      'https://scholar.google.com/citations?view_op=search_authors&hl=en&mauthors=',\n      search_string, \"&btnG=\")\n    \n    # checks if author is available and gets its Google Scholar ID\n    # get author search ID\n    gc_author_id = read_html(gc_author_search_url) %&gt;%\n      html_elements(xpath = '//*[@id=\"gsc_sa_ccl\"]/div/div/a') %&gt;%\n      .[[1]] %&gt;%\n      html_attr(\"href\")\n    \n    # gc uses pagination with a maximum return of 100 entries \n    # loop over each page (I loop it over 5 pages or 500 entries) \n    # (most faculty don't have greater than 400 publications or above 300 \n    #    there's repeated pubs or working papers without any citations or year)  \n    gc_author_pubs = lapply(seq(0, 300, 100), function(i){\n      \n      # google scholar author profile url\n      gc_author_url = paste0(\"https://scholar.google.com\", gc_author_id,\n                             \"&oi=ao\", \"&cstart=\", i, \"&pagesize=100\")\n      \n      # get html of author profile\n      gc_author_html = read_html(gc_author_url)\n      \n      # get all publications of the author\n      gc_author_pubs = gc_author_html %&gt;%\n        html_elements(xpath = '//*[@id=\"gsc_a_t\"]') %&gt;%\n        html_table() %&gt;%\n        .[[1]]\n      \n      # fix column names\n      names(gc_author_pubs) = c(\"publication\", \"citation_count\", \"year\")\n      \n      # author affiliation for confirmation\n      gc_author_affil = gc_author_html %&gt;%\n        html_elements(xpath = '//*[@id=\"gsc_prf_i\"]/div[2]/a') %&gt;%\n        html_text()\n      \n      # add author affiliation\n      gc_author_df = gc_author_pubs %&gt;%\n        mutate(author_affil = gc_author_affil)\n      \n      # add delay of 5 secs (to avoid Google detecting these requests)\n      date_time = Sys.time()\n      while((as.numeric(Sys.time()) - as.numeric(date_time))&lt;3){}\n      \n      # get dataframe\n      return(gc_author_df)\n    })\n    \n    # append dataset from each page for the same author\n    bind_rows(gc_author_pubs) %&gt;%\n      # remove unnecessary rows\n      filter(!year %in% \"Year\") %&gt;% \n      # add faculty name\n      mutate(author = x) %&gt;%\n      # drop error message (after the last publication this error message gets added)\n      filter(!year %in% \"There are no articles in this profile.\")\n    \n  }, error = function(e){NULL}))\n  \n}"
  },
  {
    "objectID": "posts/2022-02-06-google-scholar-scraping.html#get-publications-for-all-authors",
    "href": "posts/2022-02-06-google-scholar-scraping.html#get-publications-for-all-authors",
    "title": "Web Scraping Publications from Google Scholar",
    "section": "Get Publications for all Authors",
    "text": "Get Publications for all Authors\nI use the author names that I extracted earlier to get all the publications for all the faculties.\n\n# total number of faculty at Stanford with industry affiliation\nn_fac_with_ind_affil = NROW(faculty[faculty$industry_affil == 1, 'name'])\n\n# get publications for all such professors\ndf_final = lapply(1:n_fac_with_ind_affil, function(i){\n  # faculty name\n  fac_name = faculty[faculty$industry_affil == 1, 'name'][i]\n  # get publications data frame using function built earlier\n  get_faculty_pubs(fac_name)\n})\n\n# append all the data\ndf_final = bind_rows(df_final)\n\nNote that some authors do not have a Google Scholar profile. In the case, the function simply outputs a NULL value."
  },
  {
    "objectID": "posts/2022-01-18-gcp-translate.html",
    "href": "posts/2022-01-18-gcp-translate.html",
    "title": "Translate using Google Translate",
    "section": "",
    "text": "\\(~\\)\nThis is a short write-up for beginners who want to use the Google Cloud Platform (GCP) Translation Client API to translate one or multiple variables from a dataset.\nThe GCP Translate API can be used for quick and effective translation. The Basic API is free to use upto 500,000 characters per month and thereafter carries a cost of 20 USD for each 1 million character. There are also advanced, media and auto ML translate APIs which is beyond the scope of the article. Note that if you translate a string or text without specifying the source language, the characters are only counted once towards the quota. There’s no additional cost of detecting the language. However, explicitly detecting source language count towards the quota.\nGoogle provides an official translation API for Python and that is what the following blog uses. First of all we are going to setup a GCP account and create our credentials.\n\nGo to Google Cloud and sign in using your Google Account.\n\nOnce you are in your dashboard, go to the top bar and create a new project.\n\nThen click billing and then setup billing for the project. You would ideally need your credit card to set it up. (Don’t worry you will not be charged for any request beyond your quota unless to move to a paid account. The APIs will provide an error if you exceed your quota and will not proceed further without converting to a paid account.) Additionally, at the time of writing this post, Google provided a joining credit of 300 USD which can be used.\n\nOnce billing has been setup, select the “APIs and Services” option in the right side menu and search for “Translate API” and click “Enable”.\n\nSelect “IAM and Admin” and then “Service Account”.\n\nCreate a Service Account and then create keys. (The keys automatically get downloaded as a json file. You cannot download the keys again so keep it somewhere safe in your local machine.)\n\nThen we shall download the required packages directly from terminal in case you haven’t downloaded these previously. Simply run these code in terminal.\n\n$ python3 -m pip install pandas\n$ python3 -m pip install numpy\n$ python3 -m pip install google-cloud-translate\n\n\nImport Necessary Packages\nNow run the following chunk directly in Python to import the libraries.\n\nimport pandas as pd\nimport numpy as np\nimport json\nfrom google.cloud import translate\n\n\n\nSetup GCP Client Credentials\n\n# set service account credentials\nclient_credentials = json.load(open(\"FULL_PATH_TO_KEY.json\"))\n# set project id and build client\nproject_id = client_credentials['project_id']\nassert project_id\nparent = f\"projects/{project_id}\"\nclient = translate.TranslationServiceClient()\n\n\n\nGetting all Language Codes\n\n# Get all languages\nresponse = client.get_supported_languages(parent = parent, display_language_code = \"en\")\nlanguages = response.languages\n\nprint(f\" Languages: {len(languages)} \".center(60, \"-\"))\nfor language in languages:\n    print(f\"{language.language_code}\\t{language.display_name}\")\n\n\n\nTranslate Example\n\n# GCP translate\nsample_text = [\"Bonjour\", \"Oui\"]\ntarget_language_code = \"en\"\n\nresponse = client.translate_text(\n    contents = sample_text,\n    target_language_code = target_language_code,\n    parent = parent,\n)\n\nfor translation in response.translations:\n    print(translation.translated_text)\n\n\n\nImport Dataset\n\n# load dataset as pandas dataframe\ninput_df = pd.read_stata(\"PATH_TO_DATASET.dta\")\n\n# tidy dataset (remove line separators from data)\ninput_df = input_df.replace(r'\\r', '', regex=True)\ninput_df = input_df.replace(r'\\n', '', regex=True)\n\n# GCP translate API doesn't support empty strings (to avoid errors)\n# identify empty rows in variable\ninput_df['french_var_empty'] = np.where(input_df['french_var'] == \"\", 1, 0) \n# set a fake string to avoid errors\ninput_df['french_var'] = np.where(input_df['french_var'] == \"\", \"1\", input_df['french_var']) \n\n\n\nTranslate from Dataset\nThe GCP translate API doesn’t accept large chunks of text hence we divide the data into batches of 200 rows and translate within a loop until we exhaust the entire length of the dataframe.\n\n# set empty translated list\ntranslated_output_list = []\n\n# translate in chunks\nx1 = 0\nx2 = 200\n\nwhile x1 &lt; len(input_df):\n    input_text = input_df[x1:x2]['french_var']\n    target_language_code = \"en\"\n    # translate \n    response = client.translate_text(\n        contents = input_text,\n        target_language_code = target_language_code,\n        parent = parent,\n    )\n    # append to list\n    for n in range(0,len(response.translations)):\n        translated_output = response.translations[n].translated_text\n        translated_output_list.append(translated_output)\n    # update counter\n    x1 = x1 + 200\n    x2 = x1 + 200"
  }
]